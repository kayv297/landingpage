[
  {
    "title": "Learning-D3: R Basics: Data types",
    "postcontent": "Ngày thứ 3<br>Hôm này mình bắt đầu khoá 7/8 để lấy chứng chỉ Google Data Analytics Professional: Data Analysis with R Programming. Đây cũng là lần đầu tiên mình tiếp xúc với R.<br>Vì mới là ngày đầu nên mình học một số cái căn bản (rất phù hợp cho ai chưa biết gì về programming nha).<br><br>  <b>1. Biến, Loại biến, Vector, và List</b><br>  R có 4 loại biến cơ bản:<ul><li><b>Character:</b> chứa chuỗi ký tự (chữ). Nhớ viết trong dấu '' nha. ('a', 'b', 'Kay')</li><li><b>Double:</b> chứa số thực. (1.5, 2.5, 19.5)</li><li><b>Integer:</b> chứa số nguyên. (1, 2, 30)</li><li><b>Logical:</b> chứa TRUE hoặc FALSE.</li></ul><br><b>*Notes:</b> giữa Double và Integer có cách khai báo khác nhau, lát nữa mình sẽ chỉ khi tạo Vector luôn nha.<br>  Và các loại biến này có thể tạo thành Vector hoặc List.<br>  Bắt đầu rối rồi đó😵‍💫😵‍💫. Vậy thì Vector và List là gì?<br>  <b>Vector:</b> là một tập hợp các phần tử. Có 2 loại vector là <b>Atomic Vector</b> và <b>List</b>.<br><ul><li><b>Atomic Vector (mình cứ gọi là vector thôi cho tiện):</b> là vector chứa các phần tử cùng loại. Có 4 loại atomic vector là Character, Double, Integer, và Logical.<br><img src='../images/demovector.png' id='code-img' alt='Demo Vector'><br>Để tạo vector, ta dùng c() như trên hình và dấu '<-' để gán giá trị vừa tạo ra vào một biến.Để xem vector đó là loại nào, ta dùng typeof(tên_biến). Chú ý trong hình ta có thể thấy sự khác nhau giữa Vector loại Double và Integer. Integer bắt buộc phải có chữ 'L' ở đằng sau mỗi số, còn nếu không thì R sẽ auto hiểu đó là Double. Nhớ kĩ nha!😁😁<br><br>Vậy nếu một vector chứa nhiều loại giá trị thì sao? Bạn xem thử ví dụ này nhé:<br><img src='../images/demovector2.png' id='code-img' alt='Demo Vector 2'><br>Vector này chứa cả 4 loại data, vậy tại sao kết quả lại là Character? Vì R nếu trong một Vector có nhiều loại data, R sẽ hiểu theo một thứ tự ưu tiên được đặt sẵn: Character → Double → Integer → Logical (Cái này không cần nhớ đâu vì bạn có thể Google😉).<br><br>Tiếp đến sẽ là đặt tên cho các biến trong Vector (vụ này mới hơn so với các ngôn ngữ khác, này cũng là lần đầu mình thấy, hoặc là mình chưa biết🤔). Nôm na nó sẽ trông như thế này:<br><img src='../images/demovector3.png' id='code-img' alt='Demo Vector 3'><br>Ở đây thì giá trị của Vector sẽ là (1, 2, 3), và 'a' sẽ là tên của biến có giá trị 1, 'b' sẽ là tên của biến có giá trị 2,...<br><br>Để đặt tên, ta còn một cách khác nữa:<br><img src='../images/demovector4.png' id='code-img' alt='Demo Vector 4'><br>Vector đã có giá trị sẵn, sau đó chúng chỉ hướng đến tên của các biến bằng names(tên_vector), rồi lại dùng một Vector khác chứa sẵn tên biến để áp vào.Bạn không bắt buộc phải dùng cả 2 cách, chọn 1 cái mà mình thích thôi cho đỡ rối đầu nhé!</li><li><b>List:</b> là vector nhưng có thể chứa một lúc nhiều loại data. Để tạo thì ta sẽ dùng list(phần_tử) như hình dưới đây:<br><img src='../images/demolist.png' id='code-img' alt='Demo List'><br>Thêm nữa là ta có thể để list VÀO TRONG list, gọi là Nested List:<br><img src='../images/demolist2.png' id='code-img' alt='Demo List 2'><br>Sau đó thì để xem được list này, ta có 2 cách:<br><img src='../images/demolist3.png' id='code-img' alt='Demo List 3'><br><img src='../images/demolist4.png' id='code-img' alt='Demo List 4'><br>Mình thích cách ở trên hơn vì nó dễ nhìn.<br><br>Về đặt tên thì cũng tương tự như Vector:<br><img src='../images/demolist5.png' id='code-img' alt='Demo List 5'><br></li></ul><b>2. Dates - Time</b><br>Kế đến sẽ là về thời gian và ngày tháng. Ở đây ta sẽ dùng các hàm có sẵn trong thư viện 'lubridate' của 'tidyverse' (thư viện lớn hơn). Nhưng tụi này cần tải về và load lên lúc bạn làm, cách làm như sau:<br><img src='../images/datetime.png' id='code-img' alt='Date Time'><br>Nhớ chờ 1 xíu cho nó chạy nha, phải tải về mà. Bước install bạn chỉ cần làm 1 lần, từ những lần tiếp theo, bạn chỉ cần library() để load lên là oke rồi. Nghịch thử 1 xíu nha:<br><img src='../images/datetime1.png' id='code-img' alt='Date Time 1'><br>today() dùng để xem ngày hôm nay, còn now() thì xem được thêm cả giờ.<br>Để làm việc với data dạng này, đầu tiên chúng ta cần chuyển data đầu vào về dạng Date trước đã, vì thường thì chúng ta sẽ import data từ đâu đó vào trong này, nên R sẽ nhận diện chúng là Character (default ấy mà).<br><img src='../images/datetime2.png' id='code-img' alt='Date Time 2'><br>ymd, mdy, dmy,... là các hàm convert. Èo, ban đầu mình nhìn thì nghĩ là sao nhớ nổi trời😵‍💫. Tuy nhiên, thật ra lại siêu dễ.<br><b>y: year, m: month, d: day</b><br>Ví dụ: ymd là year-month-day, mdy là month-day-year,...<br>Không quan trọng bạn sắp xếp theo thứ tự nào, miễn giá trị ở trong hàm được xếp theo đúng thứ tự đó là ngon ăn.<br>Nếu bạn không xếp đúng thứ tự của hàm thì sẽ báo lỗi như hình dưới đây:<br><img src='../images/datetime3.png' id='code-img' alt='Date Time 3'><br>Làm gì có tháng 24 ngày 7 đúng không😂😂.<br><b>*Notes:</b> Nếu ai tò mò thì data dạng Date sẽ được R hiểu là Double nhé.<br><img src='../images/datetime4.png' id='code-img' alt='Date Time 4'><br>Nãy giờ chỉ có ngày tháng không thôi, giờ cho thêm thời gian vào nha.<br><img src='../images/datetime5.png' id='code-img' alt='Date Time 5'><br><b>h: hour, m: minute, s: second</b>Vẫn luôn nhớ là giá trị trong hàm phải đúng với format của hàm nha.<br><b>*Notes:</b> Nếu bạn không xác định giờ, phút, giây thì R sẽ tự động gán giá trị 0 vào đó.<br><br>Vấn đề nổi lên là toàn là UTC không, dù bạn có cố nhập múi giờ khác thì R vẫn sẽ hiểu là UTC, giống vầy:<br><img src='../images/datetime6.png' id='code-img' alt='Date Time 6'><br>Để chuyển múi giờ, ta cần thêm tz ở đằng sau:<br><img src='../images/datetime7.png' id='code-img' alt='Date Time 7'><br><br><b>3. Nghịch</b>Sau khi học căn bản xong thì mình có nghịch một chút trên một table dữ liệu có sẵn trong R (thật ra là đi kèm với library, tải cái một bằng install.package() ấy mà).<br>Table này chứa data về chim cánh cụt, ở đây mình làm ra được 3 chart nhìn khá vui.<br><b>  a. Số lượng loài (dễ nhìn)</b><br><img src='../images/penguin1.png' id='code-img' alt='Penguin 1'><br><b>  b. Khối lượng cơ thể dựa trên độ dài vây (theo loài) (trung bình)</b><br><img src='../images/penguin2.png' id='code-img' alt='Penguin 2'><br><b>  c. Distribution của khối lượng cơ thể theo loài (căng nha)</b><br><img src='../images/penguin3.png' id='code-img' alt='Penguin 3'><br>Làm ra được mấy cái chart này rồi đọc được data từ table này vui thật.<br>Đó là tất cả những gì mình học được hôm nay.<br>Stay heated! Cảm ơn bạn đã đọc!",
    "date": "2024-07-24",
    "tags": ["Data Visualization", "Learning Journey", "R", "Data Analysis"]
  },
  {
    "title": "Learning-D2: Hoàn thành khoá Data Visualization",
    "postcontent": "Ngày thứ 2.<br>Hôm nay mình tiếp tục Khoá Data Visualization mà mình đang học dở hôm qua. Hôm nay thì chủ yếu là Tableau cơ bản với soft skills khi thuyết trình thôi nên cũng khá nhẹ.<br><br><b>Tableau:</b> Hôm nay mình tập làm và thành quả ra được 2 em Dashboard như sau:<br><br>  #1: Chỉ số hạnh phúc, GDP bình quân, và Tuổi thọ<br><img src='../images/happiness_dashboard.png' id='inpost-img' alt='Happiness Dashboard'><br>  Ở đây mình có bảng ở bên trái là chỉ số hạnh phúc (Happiness Score - HP Score) của các quốc gia trong giai đoạn 2015-2017, kế đến là 2 biểu đồ thể hiện độ liên quan (correlation) giữa HP Score - GDP bình quân (GDP per capita) và HP Score - Tuổi thọ (Life Expectancy).<br>  Đường ở giữa biểu đồ là đường trendline thể hiện mối quan hệ dự đoán của 2 biến (dành cho bạn nào chưa biết thì cái này là Linear Regression, dùng để dự đoán độ liên quan giữa 2 biến bất kì), và lưu ý là đường này chỉ mang tính tương đối (nên các bạn có thể thấy là không phải điểm nào cũng nằm trên đường trendline).<br><br>  #2: Độ phát thải CO2 (trung bình) của các quốc gia và khu vực.<br>  <img src='../images/CO2_dashboard.png' id='inpost-img' alt='CO2 Dashboard'><br>  Ở dashboard này thì biểu đồ ở trên biểu thị cho độ phát thải CO2 trung bình của các quốc gia trong giai đoạn 2015-2017, và biểu đồ ở dưới thể hiện độ phát thải CO2 trung bình của các khu vực từ 1962-2012.<br>  Tính ra là làm cho vui nhưng cũng vui phết.😁😁😁<br><br><b>Soft Skills:</b> Công việc của một Data Analyst sẽ là phân tích dữ liệu + trình bày nó (là thuyết trình ấy). Nên là dù bạn có giỏi rút insight từ data thì nếu bạn không biết cách mang chúng đến với mọi người thì cũng 'het cuu'.<br>Dù vẫn là lý thuyết nhưng phần này cũng khá hay và hữu ích. Ở phần này thì mình tâm đắc nhất 2 cái như sau<br><br>  <b>#1: Các khía cạnh của Data Storytelling</b><ul><li><b>Nhân vật (Characters):</b> Đối tượng mà bạn nhắm đến khi phân tích dữ liệu (Khách hàng, thu nhập, lượt truy cập web,...). Bạn có thể nghĩ theo hướng đây là phần trả lời cho 'Who' và 'What'</li><li><b>Bối cảnh (Setting):</b> Thời điểm + Địa điểm của data, trả lời cho 'Where' và 'When'. Ví dụ như data doanh thu của một chuỗi trà sữa trong một năm chẳng hạn.</li><li><b>Plot:</b> Vấn đề mà bạn muốn giải quyết khi phân tích dữ liệu, và đây phải là phần bạn đặt trọng tâm vào. Ví dụ như doanh thu và lợi nhuận của công ty đối thủ có đáng ngại với công ty mình hay không? Hay đơn giản chỉ là trà sữa có được mua nhiều hơn vào mùa hè hay không?</li><li><b>Khui! (Big Reveal):</b> Là lúc bạn share cho mọi người insight của mình rút ra được. Nó nên là một cái gì đó đáng chú ý (to to một chút ấy), chứ không thì mọi người cũng chẳng buồn lắng nghe lắm.</li><li><b>Giải pháp (Aha moment):</b> Lúc này bạn sẽ đề nghị bước tiếp theo mọi người nên làm sau khi hiểu được insight mà bạn rút ra được (công ty nên điều chỉnh số lượng nhập hàng tuỳ theo thời gian như thế nào, chẳng hạn).</li></ul>  <b>#2: Pro-tips</b><ul><li>Sau khi bạn cho khán giả xem một biểu đồ nào đó, hãy khựng lại tầm 5s để mọi người có thể process cái biểu đồ trước đã.</li><li>Khi đưa một biểu đồ bất kì cho khán giả lúc mới bắt đầu, nhớ giải thích kĩ những gì họ cần biết để đọc được biểu đồ. Nhớ hỏi luôn là 'có ai không hiểu biểu đồ này không?' thì càng tốt.</li><li>Ở mỗi slide từ text chỉ nên dài dưới 5 dòng và 25 từ tổng cộng.</li><li>Luôn hướng vào trọng tâm của bài nói. Nếu ai đó hỏi cái gì không liên quan, hãy cố direct họ lại chủ đề chính (và có thể hẹn một buổi khác chia sẻ sau).</li><li>Nếu ai đó đặt câu hỏi mà bạn không biết câu trả lời, hãy nói thẳng và xin thời gian để tìm hiểu sau, cũng như hẹn dịp để giải đáp cho họ.</li></ul>Đó là tất cả những gì mình học được hôm nay.<br>Stay heated! Cảm ơn bạn đã đọc!",
    "date": "2024-07-23",
    "tags": ["Data Visualization", "Learning Journey", "Data Storytelling"]
  },
  {
    "title": "Learning-D1: Cập nhật Web + Data Visualization",
    "postcontent": "Hôm nay mình đã cập nhật thêm cho trang web này sau khi xem qua các phản hồi.<br>Bao gồm: Làm cho page tự chỉnh kích cỡ khi được load bởi nhiều màn hình có kích cỡ khác nhau và chỉnh một chút nút chọn ngôn ngữ.<br><br>Ngoài ra, mình đã bắt đầu khoá Data Visualization của Google (đây là khóa thứ 6 trong chuỗi 8 khóa học phải hoàn thành để lấy chứng chỉ Google Data Analytics Certificate).<br>Từ trước đến giờ, mình chỉ nghĩ làm Data Visualization (là làm mấy cái chart rồi bỏ vào trong report chẳng hạn ấy) là công việc cần sự sáng tạo là đủ, nhưng không...<br>Nếu bạn là người sáng tạo, thì đây sẽ là điểm cộng CỰC LỚN cho công việc này. Tuy nhiên, mình không phải là người sáng tạo đến vậy, và mình luôn gặp khó trong những chuyện như là: chọn màu nào; nên dùng palette màu không, nếu có thì chọn cái nào giờ; đặt chart này ở đây ổn không ta, v.v… (và mình tin rằng có nhiều bạn giống mình).  Mình tìm đến các quy tắc (nói đơn giản là một quy trình sẵn) để mình có thể follow theo để tạo visualization, và mình tìm đến ‘Design Thinking’ (nói đúng hơn là trong khoá học thì instructor dạy mình vậy 😊). ‘Design Thinking’ sẽ gồm 5 bước:<ol><li><b>Sympathize (Đồng cảm):</b> Xem xét nhu cầu và sở thích của khán giả mục tiêu khi tạo visualization.</li><li><b>Define (Định nghĩa):</b> Tìm hiểu điều mà khán giả muốn lấy từ dữ liệu (tức là họ tập trung vào mục tiêu nào). Ví dụ: Nhiệt độ và doanh số kem có liên quan với nhau không?</li><li><b>Ideate (Lên ý tưởng):</b> Nghĩ xem mình sẽ tạo visualization này như thế nào (nên design nó trông như thế nào ấy). Cá nhân mình luôn recommend vẽ ý tưởng của mình ra, dù là trên giấy, trên bảng, hay trên tablet đều được. Mục tiêu là để ý tưởng tuôn ra vì bạn không thể giữ mọi thứ trong đầu. Tin mình đi, bạn sẽ thấy cái bước khó nhằn này nhanh hơn bao giờ hết.</li><li><b>Prototype (Tạo mẫu):</b>Tạo nó! Tuy nhiên, bản này chỉ nên dùng để đưa cho những người bạn quen để nhận phản hồi.</li><li><b>Test (Thử):</b>Mang đi cho mọi người xem để nhận phản hồi</li></ol> Nhưng sau đó thì sao? Sau khi xem qua tất cả phản hồi, bạn nên quay lại bước 3, làm lại và tinh chỉnh visualization của mình cho đến khi nhận được cái gật đầu từ mọi người.<br><br>Mình biết khúc này sẽ rất mất thời gian, đặc biệt là đối với ai không quá sáng tạo, nhưng chịu rồi, nếu bạn không qua được thì bótay.com. Cái sự vật lộn này giống như một bài test xem bạn có phù hợp với phần việc này hay không.<br><br>Ráng nhé! Cảm ơn bạn đã đọc!",
    "date": "2024-07-22",
    "tags": ["Data Visualization", "Design Thinking", "Learning Journey"]
  },
  {
    "title": "Khởi đầu",
    "postcontent": "Hế lu!<br><br>Cứ gọi mình là Kay hoặc Kha (tại Kha hơi khó đọc với người nước ngoài nên mình lấy luôn là Kay (K) cho ai cũng dễ đọc<br>Hiện tại mình đang là sinh viên năm hai tại một trường đại học quốc tế ở Nhật Bản (tụi mình học mọi thứ bằng tiếng Anh, vì vậy tiếng Nhật của mình không được tốt lắm). Chuyên ngành của mình lưng lửng giữa Kinh doanh và IT, nhưng không phải là song bằng nha. (mình cũng ước được nhận song bằng 😭)<br><br> Mình làm blog này để ghi lại hành trình học tập mỗi ngày của mình (hiện tại là Data Analytics), và cũng như tản mạn ngẫu nhiên (chém gió ấy). Do đó, nội dung của các bài viết có thể khá đa dạng, nhưng hầu hết sẽ liên quan đến lĩnh vực Công nghệ.<br><br> Mình hy vọng bạn thích đọc blog của mình!",
    "date": "2024-07-22",
    "tags": ["Suy nghĩ"]
  }
]
  